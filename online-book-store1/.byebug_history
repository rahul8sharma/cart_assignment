exit
current_user.cart_items
continue
@product
continue
@product
@user
FactoryGirl.create(:item, itemable: @user, product: @product)
FactoryGirl.build(:item, itemable: order)
continue
Item.all.pluck(:itemable_type)
Item.all.size
Item.last
Item.all
current_user.cart_items
params[:product_id]
current_user.cart_items.where(product_id: params[:product_id])
current_user
continue
      }.to change(Item, :count).by(-1)
        xhr :delete, :remove_from_cart, {product_id:  @product.id}
      expect {
it "remove product from cart" do
continue
user_item
continue
current_user.cart_items.where(product_id: params[:product_id])
params[:product_id]
current_user
continue
current_user
continue
current_user
@product = Product.find(params[:product_id])
params[:product_id]
continue
xhr :get, :add_to_cart, {product_id:  @product.id}
continue
xhr :get, :add_to_cart, {product_id:  @product.id}
get :add_to_cart, {product_id:  @product.id}
continue
get :add_to_cart, {product_id:  @product.id}
continue
get :add_to_cart, {product_id:  @product.id}
continue
get :add_to_cart, {product_id:  @product.id}
@product.id
continue
get :add_to_cart, {product_id:  @product.id}
continue
expect(assigns(:products)).to eq(@product)
assigns(:products) == @product
assigns(:products)
@product
@products
continue
user_item.valid?
user_item
continue
FactoryGirl.build(:item, itemable: FactoryGirl.create(:user))
FactoryGirl.build(:item, itemable: user)
FactoryGirl.build(:item)
FactoryGirl.build(:user_item)
user_item
continue
current_user.cart_items.last.price
current_user.cart_items.last.prize
current_user.cart_items.last
current_user.cart_items.length
current_user.cart_items
current_user
continue
xhr :get, :add_to_cart, product_id: product.id
get :add_to_cart, product_id: product.id, format: "js"
get :add_to_cart, product_id: product.id, xhr: true
get :add_to_cart, product_id: product.id
get :add_to_cart, {product_id: product.id}
get :add_to_cart, {product_id: product.id}, format: "js"
continue
get :add_to_cart, product_id: product.id, xhr: true
continue
get :add_to_cart, product_id: product.id, format: "js"
product = Product.create(name: FFaker::Product.brand, price: 10.99)
product
get :add_to_cart, product_id: product.id, format: "js"
Product.create(name: FFaker::Product.brand, price: 10.99)
continue
User.all.count
User.all
exit
continue
User.create(name: FFaker::Name.first_name, email: FFaker::Internet.safe_email, password: '12345678', password_confirmation: '12345678')
